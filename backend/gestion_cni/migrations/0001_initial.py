# Generated by Django 4.2.20 on 2025-06-02 23:29

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('type_utilisateur', models.CharField(choices=[('admin', 'Administrateur'), ('agent', 'Agent'), ('citoyen', 'Citoyen')], max_length=100)),
                ('telephone', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text="Les groupes auxquels appartient l'utilisateur", related_name='utilisateur_set', related_query_name='utilisateur', to='auth.group', verbose_name='groupes')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permissions spécifiques pour cet utilisateur', related_name='utilisateur_set', related_query_name='utilisateur', to='auth.permission', verbose_name='permissions utilisateur')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cle', models.CharField(max_length=50, unique=True, verbose_name='Clé de configuration')),
                ('valeur', models.TextField(verbose_name='Valeur associée')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Description de la configuration')),
                ('modifiable', models.BooleanField(default=True, verbose_name="Modifiable via l'interface")),
            ],
            options={
                'verbose_name': 'Paramètre de configuration',
                'verbose_name_plural': 'Paramètres de configuration',
                'ordering': ['cle'],
            },
        ),
        migrations.CreateModel(
            name='ExtraitNaissance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prenom', models.CharField(max_length=100, verbose_name='Prénom')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('date_naissance', models.DateField(verbose_name='Date de naissance')),
                ('lieu_naissance', models.CharField(max_length=100, verbose_name='Lieu de naissance')),
                ('pere_nom', models.CharField(max_length=100, verbose_name='Nom père')),
                ('mere_nom', models.CharField(max_length=100, verbose_name='Nom de la mère')),
                ('date_emission', models.CharField(max_length=100, verbose_name="Commune d'émission")),
                ('commune_emission', models.CharField(max_length=100, verbose_name="Commune d'émission")),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création (enregistrement)')),
                ('date_mise_a_jour', models.DateTimeField(auto_now=True, verbose_name='Dernière mise à jour')),
            ],
            options={
                'verbose_name': 'Extrait de naissance',
                'verbose_name_plural': 'Extraits de naissance',
                'ordering': ['-date_emission'],
            },
        ),
        migrations.CreateModel(
            name='Administrateur',
            fields=[
                ('utilisateur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='administrateur', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('super_admin', models.BooleanField(default=False, verbose_name='Super administrateur')),
            ],
            options={
                'verbose_name': 'Administrateur',
                'verbose_name_plural': 'Administrateurs',
            },
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('utilisateur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='agent', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('matricule', models.CharField(max_length=20, unique=True)),
                ('grade', models.CharField(choices=[('agent', 'Agent'), ('superviseur', 'Superviseur'), ('chef_service', 'Chef de Service')], default='agent', max_length=20)),
            ],
            options={
                'verbose_name': 'Agent',
                'verbose_name_plural': 'Agents',
                'ordering': ['matricule'],
            },
        ),
        migrations.CreateModel(
            name='Citoyen',
            fields=[
                ('utilisateur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='citoyen', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('nin', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name="Numéro d'identification national")),
                ('date_naissance', models.DateField(blank=True, null=True)),
                ('lieu_naissance', models.CharField(blank=True, default='', max_length=100)),
                ('sexe', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin')], default='M', max_length=1)),
                ('nationalite', models.CharField(default='Guinéenne', max_length=50)),
                ('adresse', models.CharField(blank=True, default='', max_length=100, verbose_name='Domicile')),
                ('profession', models.CharField(blank=True, default='', max_length=100)),
                ('situation_matrimoniale', models.CharField(blank=True, choices=[('celibataire', 'Célibataire'), ('marie', 'Marié(e)'), ('divorce', 'Divorcé(e)'), ('veuf', 'Veuf/Veuve')], default='celibataire', max_length=20, null=True)),
                ('pere_nom', models.CharField(blank=True, default='', max_length=100, verbose_name='Nom du père')),
                ('mere_nom', models.CharField(blank=True, default='', max_length=100, verbose_name='Nom de la mère')),
                ('photo', models.ImageField(blank=True, upload_to='photos/')),
            ],
            options={
                'verbose_name': 'Citoyen',
                'verbose_name_plural': 'Citoyens',
                'ordering': ['nin'],
            },
        ),
        migrations.CreateModel(
            name='Demande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_demande', models.CharField(choices=[('premiere', 'Première demande'), ('renouvellement', 'Renouvellement'), ('duplicata', 'Duplicata')], default='premiere', max_length=20)),
                ('statut', models.CharField(choices=[('en_cours', 'En cours de traitement'), ('validee', 'Validée'), ('rejetee', 'Rejetée')], default='en_cours', max_length=20)),
                ('date_soumission', models.DateTimeField(auto_now_add=True)),
                ('date_traitement', models.DateTimeField(blank=True, null=True)),
                ('motif_rejet', models.TextField(blank=True)),
                ('agent_traitant', models.ForeignKey(blank=True, limit_choices_to={'type_utilisateur': 'agent'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Agent en charge')),
                ('extrait', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion_cni.extraitnaissance', verbose_name='Extrait de naissance associé')),
                ('citoyen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='demandes', to='gestion_cni.citoyen')),
            ],
            options={
                'verbose_name': 'Demande de CNI',
                'verbose_name_plural': 'Demandes de CNI',
                'ordering': ['-date_soumission'],
            },
        ),
        migrations.CreateModel(
            name='Paiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant (GNF)')),
                ('date_paiement', models.DateTimeField(auto_now_add=True)),
                ('methode', models.CharField(choices=[('orange_money', 'Orange Money'), ('mobile_money', 'Mobile Money (MTN)')], max_length=20, verbose_name='Méthode de paiement')),
                ('transaction_id', models.CharField(max_length=100, unique=True, verbose_name='ID Transaction')),
                ('statut', models.CharField(choices=[('en_attente', 'En attente'), ('complet', 'Complet'), ('echoue', 'Échoué'), ('rembourse', 'Remboursé')], default='en_attente', max_length=20)),
                ('demande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paiements', to='gestion_cni.demande')),
            ],
            options={
                'verbose_name': 'Paiement',
                'verbose_name_plural': 'Paiements',
                'ordering': ['-date_paiement'],
                'indexes': [models.Index(fields=['transaction_id'], name='idx_transaction'), models.Index(fields=['demande'], name='idx_paiement_demande')],
            },
        ),
        migrations.CreateModel(
            name='Historique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=50, verbose_name='Action effectuée')),
                ('details', models.TextField(blank=True, null=True, verbose_name='Détails complémentaires')),
                ('date_action', models.DateTimeField(auto_now_add=True, verbose_name="Date de l'action")),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions_historique', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': "Entrée d'historique",
                'verbose_name_plural': 'Historique des actions',
                'ordering': ['-date_action'],
                'indexes': [models.Index(fields=['action'], name='idx_action'), models.Index(fields=['date_action'], name='idx_historiques_date')],
            },
        ),
        migrations.AddField(
            model_name='extraitnaissance',
            name='citoyen',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='extrait_naissance', to='gestion_cni.citoyen', verbose_name='Citoyen associé'),
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_document', models.CharField(choices=[('extrait', 'Extrait de naissance'), ('photo', "Photo d'identité"), ('residence', 'Certificat de résidence')], max_length=20, verbose_name='Type de document')),
                ('fichier', models.FileField(upload_to='documents/%Y/%m/%d/', verbose_name='Fichier uploadé')),
                ('statut_verification', models.CharField(choices=[('non_verifie', 'Non vérifié'), ('valide', 'Validé'), ('invalide', 'Invalide')], default='non_verifie', max_length=20, verbose_name='Statut de vérification')),
                ('date_upload', models.DateTimeField(auto_now_add=True, verbose_name="Date d'upload")),
                ('demande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='gestion_cni.demande')),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'ordering': ['-date_upload'],
                'indexes': [models.Index(fields=['demande'], name='idx_document_demande')],
            },
        ),
        migrations.CreateModel(
            name='Creneau',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creneau', models.DateTimeField(verbose_name='Date et heure du créneau')),
                ('statut', models.CharField(choices=[('disponible', 'Disponible'), ('reserve', 'Réservé'), ('complete', 'Complet'), ('annule', 'Annulé')], default='disponible', max_length=20)),
                ('agent', models.ForeignKey(limit_choices_to={'type_utilisateur': 'agent'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Agent assigné')),
                ('demande', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='creneaux', to='gestion_cni.demande')),
            ],
            options={
                'verbose_name': 'Créneau',
                'verbose_name_plural': 'Créneaux',
                'ordering': ['date_creneau'],
                'indexes': [models.Index(fields=['date_creneau'], name='idx_creneaux_date')],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenu', models.TextField(verbose_name='Contenu de la notification')),
                ('date_envoi', models.DateTimeField(auto_now_add=True, verbose_name="Date d'envoi")),
                ('statut', models.CharField(choices=[('en_attente', "En attente d'envoi"), ('envoye', 'Envoyée'), ('echoue', "Échec d'envoi"), ('lue', 'Lue')], default='en_attente', max_length=20)),
                ('demande', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='gestion_cni.demande')),
                ('citoyen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='gestion_cni.citoyen')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-date_envoi'],
                'indexes': [models.Index(fields=['citoyen'], name='idx_notifications_citoyen')],
            },
        ),
        migrations.AddIndex(
            model_name='extraitnaissance',
            index=models.Index(fields=['nom', 'prenom'], name='gestion_cni_nom_f09858_idx'),
        ),
        migrations.AddIndex(
            model_name='extraitnaissance',
            index=models.Index(fields=['date_naissance'], name='gestion_cni_date_na_b215f4_idx'),
        ),
        migrations.AddIndex(
            model_name='demande',
            index=models.Index(fields=['statut'], name='idx_statut'),
        ),
        migrations.AddIndex(
            model_name='demande',
            index=models.Index(fields=['citoyen'], name='idx_demandes_citoyen'),
        ),
    ]
